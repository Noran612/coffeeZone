import type { ErrorValue } from '../types';
import { SerovalObjectFlags } from './constants';
import type { BaseParserContext } from './context';
export declare function getErrorConstructorName(error: ErrorValue): string;
type ErrorConstructors = ErrorConstructor | EvalErrorConstructor | RangeErrorConstructor | ReferenceErrorConstructor | SyntaxErrorConstructor | TypeErrorConstructor | URIErrorConstructor;
export declare function getErrorConstructor(errorName: string): ErrorConstructors;
export declare function getErrorOptions(ctx: BaseParserContext, error: Error): Record<string, unknown> | undefined;
export declare function isIterable(value: unknown): value is Iterable<unknown>;
type TypedArrayConstructor = Int8ArrayConstructor | Int16ArrayConstructor | Int32ArrayConstructor | Uint8ArrayConstructor | Uint16ArrayConstructor | Uint32ArrayConstructor | Uint8ClampedArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor | BigInt64ArrayConstructor | BigUint64ArrayConstructor;
export declare function getTypedArrayConstructor(name: string): TypedArrayConstructor;
export declare function isValidIdentifier(name: string): boolean;
export declare function getObjectFlag(obj: unknown): SerovalObjectFlags;
export {};
